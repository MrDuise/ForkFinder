@startuml
!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Component.puml

LAYOUT_WITH_LEGEND()

Container(ma, "Mobile App", "React Native", "Provides the user interface for creating sessions with people and swiping to find restaurants.")
Container(db, "Database", "Relational Database Schema", "Stores user registration information, hashed authentication credentials, access logs, etc.")
Container(nrdb, "Database", "Non Relational Database", "Stores the user session information, such as session preferences and connected users")
Container(cache, "Cache", "Cache Storage", "Stores the restaurant information based on the session preferences")
System_Ext(es, "E-mail system", "The external e-mail system.")
System_Ext(rds, "Restaurant Data System", "The external system for getting restaurant data.")

Container_Boundary(api, "API Application") {
    Component(auth, "Authentication Controller", "Nest.js Controller", "Handles user authentication and authorization.")
    Component(users, "User Controller", "Nest.js Controller", "Manages user profiles and settings.")
    Component(sessions, "Session Controller", "Nest.js Controller", "Manages user sessions and preferences.")
    Component(restaurants, "Restaurant Controller", "Nest.js Controller", "Handles fetching and filtering restaurant data.")
    Component(emailService, "Email Service", "Nest.js Service", "Handles email notifications and confirmations.")
    Component(externalData, "External Data Service", "Nest.js Service", "Integrates with the external restaurant data system.")
    Component(cacheService, "Cache Service", "Nest.js Service", "Handles caching of restaurant data for fast access.")

    Rel(auth, db, "Reads & writes user authentication data", "TypeORM")
    Rel(users, db, "Reads & writes user profile data", "TypeORM")
    Rel(sessions, nrdb, "Reads & writes session data", "TypeORM")
    Rel(restaurants, cacheService, "Fetches cached restaurant data", "Redis")
    Rel(restaurants, externalData, "Requests restaurant data", "JSON/HTTPS")
    Rel(emailService, es, "Sends email notifications", "SMTP")
    Rel(cacheService, cache, "Reads & writes cached restaurant data", "Redis")
}

Rel(api, es, "Sends e-mails", "SMTP")
Rel(api, rds, "Uses", "JSON/HTTPS")
Rel(api, db, "Reads & writes to", "TypeORM")
Rel(api, nrdb, "Reads & writes to", "TypeORM")
Rel(api, cache, "Reads & writes to", "Redis")
Rel(ma, auth, "Authenticates users", "JSON/HTTPS")
Rel(ma, users, "Manages user data", "JSON/HTTPS")
Rel(ma, sessions, "Manages user sessions", "JSON/HTTPS")
Rel(ma, restaurants, "Fetches restaurant data", "JSON/HTTPS")

Rel(es, api, "Receives email requests", "SMTP")
Rel(rds, api, "Provides restaurant data", "JSON/HTTPS")
@enduml
